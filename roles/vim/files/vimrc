" Section: Mappings {{{
let mapleader=","                           " set leader to , (Comma)

noremap <leader>ev :e $MYVIMRC<cr> " open .vimrc with <leader>ev
noremap <leader>sv :so $MYVIMRC<cr>" open .vimrc with <leader>sv

" Support indenting multiple times in visual mode
vnoremap < <gv
vnoremap > >gv

" move in wrapped line as if they were separate
" flip meaning of j and gj, and k and gk
nnoremap k gk
nnoremap j gj
vnoremap k gk
vnoremap j gj
nnoremap gk k
nnoremap gj j
vnoremap gk k
vnoremap gj j

noremap  <leader><space> :nohlsearch<cr><leader><space> " turn off search highlight
nnoremap <space> za                         " toggle fold on spacebar
nnoremap <silent><leader>w :%s/\s\+$//<cr>  " delete all trailing whitespace
vnoremap <c-a> <esc>ggVG                    " select entire file
" }}}

" save as sudo
cmap w!! w !sudo tee > /dev/null %

" Section: Plugins {{{

" vim-plug Plugin manager
" install vim-plug:
" $ curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
if 1 " TODO: should check if vim-plug is installed
  call plug#begin('~/.vim/plugged')

  " Plugins: In use {{{

  " show git diff +, -, ~ at the left
  Plug 'airblade/vim-gitgutter'
  "set updatetime=250

  " cp to copy to system-Clipboard
  " cP to copy line and cv to paste to next line
  " REQUIRES xsel to be installed or clip and paste on Windows
  Plug 'christoomey/vim-system-copy'

  " surround with s
  Plug 'tpope/vim-surround'

  " repeat plugin commands
  Plug 'tpope/vim-repeat'

  Plug 'vimwiki/vimwiki'
  "let g:vimwiki_ext2syntax = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}
  let g:vimwiki_list = [{'syntax': 'markdown', 'ext': '.md'}]
  let g:vimwiki_global_ext = 0
  " }}}

  " Plugins: Testing {{{
  "Plug 'pandysong/ghost-text.vim'
  "}}}

  " Plugins: Unused {{{
  " }}}

  call plug#end()
endif

" }}}

" Section: OS-Specific {{{

if has("win32")
  " Windows {{{

  set backupdir=$HOME\_vim\backup\\
  set directory=$HOME\_vim\tmp\\

  " }}}
else
  " Linux {{{

  " move the backup and temp files somewhere else so they don't clutter up the
  " current directory
  set backupdir=$HOME/.vim/backup//
  set directory=$HOME/.vim/tmp//

  " }}}
endif

" }}}

" Section: Experimental {{{
" }}}

" Section: Options {{{

set encoding=utf-8                          " force utf8 support
syntax on                                   " syntax highlighting
set cursorline                              " highlight current line
set modelines=1                             " last line of this file applies to just this file
set autoindent
set display=lastline,uhex                   " show non printable as hex and long last line

set nostartofline                           " keep cursor in column when jumping
set nowrap                                  " let lines run off the screen if they are too long
set whichwrap+=<,>,h,l,[,]                  " moving beyound edge moves to adjacent line
set backspace=indent,eol,start              " enable deleting newline from beginning of next line

" move swapfiles somewhere else (directories declared in OS specific)
" Two path separators at the end to ensure file name uniqueness
" in the preserve directory (see the :help docs)
set swapfile
set backup

set ruler                                   " show line and column number
set relativenumber                          " show relative line numbers
set number                                  " but absolute of current line

set ignorecase                              " make search case insensitive
set smartcase                               " Case insensitive searches become sensitive with capitals
set lazyredraw                              " redraw only when we need to
set incsearch                               " search as characters are entered
set hlsearch                                " highlight matches

set splitbelow                              " new splits on the right and on the bottom
set splitright                              " more intutitive for LTR languages

set wildmenu                                " visual autocomplete for command menu
set wildmode=list:full                      " autocomplete first match and show list


" Enable mouse (Use it only for resizing splits!)
set mouse=a
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end

" }}}

" Section: To be reviewed {{{
" }}}

" Reload programs when config is saved
autocmd BufWritePost sxhkdrc silent! !kill -SIGUSR1 (pgrep sxhkd)

" vim: foldmethod=marker
